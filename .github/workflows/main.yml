name: Build

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # branches:
    #   - master

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: ubuntu
            CMD_BUILD: pyinstaller -F -n darts-wled -i resources/darts-wled.svg darts-wled.py
            OUT_FILE_NAME: darts-wled
            ASSET_MIME: application/octet-stream

          - os: ubuntu-20.04
            TARGET: linux-arm64
            CMD_BUILD: |
              sudo apt-get update
              sudo apt-get install -y qemu-user-static binfmt-support
              docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
              docker run -v $(pwd):/workdir -w /workdir arm64v8/ubuntu:20.04 apt-get update -y && pip install -r requirements.txt --break-system-packages && pyinstaller -F -n darts-wled-arm64 -i resources/darts-wled.svg darts-wled.py
              docker run --rm -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static --platform linux/arm64/v8 -v $(pwd):/workdir -w /workdir arm64v8/ubuntu:20.04 bash -c "apt-get update -y && apt-get install -y python3-pip && pip install -r requirements.txt && pyinstaller -F -n darts-wled-arm64 -i resources/darts-wled.svg darts-wled.py"
            OUT_FILE_NAME: darts-wled-arm64
            ASSET_MIME: application/octet-stream

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
      
